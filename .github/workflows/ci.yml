name: CI

on:
  push:
    branches:
      - next
  pull_request:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [14, 16, 18]
        include:
          - os: macos-latest
            node_version: 16
          - os: macos-latest
            node_version: 18
          - os: windows-latest
            node_version: 16
          - os: windows-latest
            node_version: 18
      fail-fast: false
    timeout-minutes: 10

    name: 'Build & Unit Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Required for docs/versions tests
          fetch-depth: 0

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'yarn'

      - name: Install deps
        run: yarn install
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

  timezone-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [18]
      fail-fast: false
    env:
      LANG: zh_SG.UTF-8
      TZ: Asia/Singapore
    timeout-minutes: 10

    name: 'Timezone Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Set system LANG=zh_SG.UTF-8
        run: |
          sudo locale-gen zh_SG.UTF-8
          sudo update-locale LANG=zh_SG.UTF-8

      - name: Check date
        run: date

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Required for docs/versions tests
          fetch-depth: 0

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'yarn'

      - name: Install deps
        run: yarn install
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

  e2e-test:
    runs-on: ubuntu-latest
    container: cypress/browsers:node18.12.0-chrome107
    timeout-minutes: 10
    name: 'E2E Doc Test: node-18, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Install deps
        run: yarn install

      - name: Build docs
        run: yarn docs:build:ci

      - id: e2e
        name: Run e2e
        run: yarn docs:test:e2e:run

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'Lint: node-18, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Set node version to 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install deps
        run: yarn install
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Lint
        run: yarn lint

      - name: Check formatting
        run: yarn prettier --check .

  ts-check-scripts:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'TS-Check Scripts: node-18, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Set node version to 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install deps
        run: yarn install
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Check scripts
        run: yarn ts-check:scripts

  ts-check-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'TS-Check Tests: node-18, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Set node version to 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install deps
        run: yarn install
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Check tests
        run: yarn ts-check:tests

  codecov:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'Codecov: node-18, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install yarn
        uses: yarn/action-setup@v2.2.4
        with:
          version: 7

      - name: Set node version to 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install deps
        run: yarn install
        env:
          CYPRESS_INSTALL_BINARY: 0

      - name: Build
        run: yarn build

      - name: Generate coverage report
        run: yarn vitest run --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
